#set ($layout = "grid.vm" )
#set ($module = "repos" )
#set ($title = "Repositories")
#set ($disablenew=false)
#if($params.profile)
#set($Integer = 0)
#set($profileid = $Integer.parseInt($params.profile))
#set($viaprofile=true)
#set($profile=$profiles.getById($profileid))
#else
#set($viaprofile=false)
#end
#if ($viaprofile)
#set ($title = "$title für Profil $profile.name")
#set($disablenew=true)
#set($disablebuttons=true)
#end
#if($request.isUserInRole("packageadmin"))
#set($disableapproval=false)
#else
#set($disableapproval=true)
#end
#if($request.isUserInRole("packageadmin"))
#set($disablebuttons=false)
#else
#set($disablebuttons=true)
#set($disablenew=true)
#end
	<SCRIPT type="text/javascript">

	function post_error_handler(jqXHR, textStatus, errorThrown) {
		alert("AJAX POST Error:"+errorThrown);
	}

	function IndentFormatter(row, cell, value, columnDef, dataContext) {
		const colors = [ "darkblue", "green", "darkgreen", "darkred" ];
		const indent = dataContext["indent"];
		var color = "black";
		var strikeout = "";
		if(indent <= colors.length)
			color = colors[indent];
		if (dataContext["action"] === "D")
			strikeout = "text-decoration: line-through";
		const spacer = '<span style="display:inline-block;height:1px;width:' + (2 * indent)
			+ 'em"></span>';
		return spacer + '<span style="color:' + color + ';' + strikeout
			+ '">' + value + '</span>';
	}

	function DiffCountFormatter(row, cell, value, columnDef, dataContext) {
		if (value == null || value === "0" || value==0) {
			return "&nbsp;-&nbsp;";
    		} else {
      			return "<span style='color:white;background:#e05050;border-radius:8px'>&nbsp;" + value + "&nbsp;</span>";
		}
	}

	function BulletFormatter(row,cell,value,columnDef,dataContext) {
		return (value) ?  '<span class="ui-icon ui-icon-bullet" style="display:inline-block"></span>' : "";
	}

	function CheckmarkFormatter(row,cell,value,columnDef,dataContext) {
		return (value) ?  '<span class="ui-icon ui-icon-check" style="display:inline-block"></span>' : "";
	}

	function StatusFormatter(row,cell,value,columnDef,dataContext) {
		console.log(value);
		if(value === null || value === "") {
			return "&nbsp;-&nbsp;";
		} else {
      			return "&#x26a0;&#xfe0f;&nbsp;" + value;
		}
	}

#js_search()

	var grid;
  	var columns = [
		{id: "name", name: "Name", field: "name", cssClass: "mycell", formatter: IndentFormatter},
		{id: "approved", name: "Freigegeben", field: "approved", cssClass: "mycell", formatter: CheckmarkFormatter},
		{id: "pred", name: "Vorg&auml;nger", field: "pred", cssClass: "mycell" },
		{id: "upd_count", name: "Updates (Vorgänger)", field: "upd_count", cssClass: "mycell", formatter: DiffCountFormatter}, 
		{id: "upd_count_origin", name: "Updates (Ursprung)", field: "upd_count_origin", cssClass: "mycell", formatter: DiffCountFormatter}, 
		{id: "schedule", name: "Zeitplan", field: "schedule", cssClass: "mycell" },
		{id: "lastUpdate", name: "Aktualisiert", field: "lastUpdate", cssClass: "mycell" },
		{id: "result", name: "Status", field: "result", cssClass: "mycell", formatter: StatusFormatter },
		{id: "repoid", name: "ID", field: "repoid", cssClass: "mycell" },
	];

	function enable_buttons() {
		let something_selected=false;
		let disable_update=true;
		let approved=false;
		let enable_mirror=false;
#if($viaprofile)
		row_ids = []; for(var i=0; i<grid.getDataLength(); i++) row_ids.push(i);
		something_selected=false;
#else
		row_ids = grid.getSelectedRows();
		something_selected = row_ids.length > 0;
#end
		console.log(row_ids);
		if(row_ids.length > 0) {
			disable_update = false;
			for(var row_idx = 0; row_idx < row_ids.length; row_idx++) {
				var o = dataView.getItem(row_ids[row_idx]);

				console.log(o);

				// determine if origin package list has been approved
				if(o.pred_id!=null) {
					disable_update = disable_update || (o.approvalRequired==true && o.pred_approved==false)
				}
				enable_mirror=(o.upstream != null && o.upstream != "") ;
				console.log(o.pred_id);
				console.log(disable_update);
			}
		}
#if(!$disablebuttons)
		$("#button-edit").button("option","disabled", something_selected==false);
		$("#button-rename").button("option","disabled", something_selected==false);
		$("#button-delete").button("option","disabled", something_selected==false);
#end
		$("#button-view").button("option","disabled", something_selected==false);
#if(!$disableapproval)
		$("#button-approve").button("option","disabled",
			something_selected==false || approved==true);
#end
		$("#button-update").button("option","disabled", disable_update);
		$("#button-mirror").button("option","disabled", enable_mirror==false);
	}

	$(document).ready(function () {

#js_create_grid("columns")
		grid.registerPlugin(new Slick.AutoTooltips());
		dataView.onRowsChanged.subscribe(enable_buttons);
		grid.onSelectedRowsChanged.subscribe(enable_buttons);
		grid.onDblClick.subscribe(function() { $("#button-view").click(); });
#js_dialog_form("new" "Create" "ui-icon-plus" $disablenew false)
#js_dialog_form("edit" "Save" "ui-icon-pencil" true false)
#js_dialog_form("rename" "Rename" "ui-icon-tag" true false)
#js_dialog_form("delete" "Delete" "ui-icon-minus" true false)

#if($viaprofile)
#if($profile.checkApprovals())
#set($disable=false)
#else
#set($disable=true)
#end
#else
#set($disable=true)
#end
#js_dialog_simple("approve","Freigeben", "ui-icon-check" true)
#js_dialog_simple("update","Aktualisieren", "ui-icon-arrowreturnthick-1-n" true) 
#js_dialog_simple("mirror","Jetzt spiegeln", "ui-icon-arrowthickstop-1-s" true)

		$("#button-view").button({disabled: true, icons:{ primary: "ui-icon-zoomin"}})
			.click(function() {
				var row=grid.getSelectedRows()[0];
				var item=dataView.getItem(row);
				var name=item.name;
				var updates=item.upd_count + item.upd_count_origin;
				var newLocation="$root/packages/index.vm?repoid="+item.id;
				if(updates>0) newLocation += "&show=updates";
				window.location=newLocation;
				});
#js_searchbox()
#if($viaprofile)
#js_load_data_key("repos","id","profile=$params.profile")
#else
#js_load_data("repos","id")
#end
	});

	</SCRIPT>
<DIV class="ui-layout-center">
</DIV>
<DIV class="ui-layout-north">#parse("menu.vm")#taskstatus($module, "id") #searchbox()</DIV>
<DIV class="ui-layout-south">
<div class="buttons">
<button id="button-new">Neu</button>
<button id="button-edit">Bearbeiten</button>
<button id="button-rename">Umbenennen</button>
<button id="button-delete">L&ouml;schen</button>
<span>&nbsp;</span>
<button id="button-approve">Freigeben</button>
<button id="button-view">Pakete anzeigen</button>
#if($viaprofile)
<button id="button-update">Alles aktualisieren</button>
#else
<button id="button-update">Aktualisieren</button>
#end
#if(!$viaprofile)
<button id="button-mirror">Jetzt spiegeln</button>
#end
</div>
</DIV>
#parse("$module/new.inc")
#parse("$module/edit.inc")
#parse("$module/rename.inc")
#parse("$module/delete.inc")
#parse("$module/approve.inc")
#parse("$module/update.inc")
#parse("$module/mirror.inc")

